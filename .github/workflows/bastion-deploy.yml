name: Deploy

on:
  push:
    branches: [ "main" ]
      
env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/redis-spring-server
  VERSION: ${{ github.sha }}
  NAME: redis-spring-server
      
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      ## jdk setting
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu' # https://github.com/actions/setup-java
          
      ## gradle caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Create application.properties for CD Deploy
        run: |
          mkdir -p src/main/resources
          cd src/main/resources
          pwd
          echo "${{ secrets.DEPLOY_APPLICATION_PROPERTIES }}" > application.properties

      - name: Create cors.properties for CD Deploy
        run: |
          mkdir -p src/main/resources
          cd src/main/resources
          pwd
          echo "${{ secrets.DEPLOY_CORS_PROPERTIES }}" > cors.properties
          
      - name: Create redis.properties for CD Deploy
        run: |
          mkdir -p src/main/resources
          cd src/main/resources
          pwd
          echo "${{ secrets.DEPLOY_REDIS_PROPERTIES }}" > redis.properties
          
      - name: Create mysql.properties for CD Deploy
        run: |
          mkdir -p src/main/resources
          cd src/main/resources
          pwd
          echo "${{ secrets.DEPLOY_MYSQL_PROPERTIES }}" > mysql.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
            
      ## gradle build
      - name: Build with Gradle
        run: ./gradlew build -x test
        
      ## docker build & push to production
      - name: Docker build & push to prod
        run: |
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker buildx create --name arm64builder --use
            docker buildx build --platform linux/amd64,linux/arm64 -f Dockerfile -t ghcr.io/zisoo-choi/redis-spring-server:latest --push .
            docker logout

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, deploy-redis-spring-backend ]
    steps:
      - name: Deploy to prod
        uses: appleboy/ssh-action@v0.1.10
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        with:
          host: ${{ secrets.BASTION_HOST }}
          username: ec2-user
          key: ${{ secrets.BASTION_PRIVATE_KEY }}
          script_stop: true
          script: |
            cd deploy_scripts
            ./run_redis_backend_deploy.sh $GHCR_TOKEN $GITHUB_ACTOR

